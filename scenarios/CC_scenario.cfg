#textdomain wesnoth-cc
## macros may not be used inside translatable strings.

#define CC_CAMPAIGN_NAME_1P
_ "Conquest 1P" #enddef

#define CC_CAMPAIGN_NAME_2P
_ "Conquest 2P" #enddef

#define CC_CAMPAIGN_NAME_3P
_ "Conquest 3P" #enddef

#define CC_CAMPAIGN_NAME_4P
_ "Conquest 4P" #enddef

#define CC_CAMPAIGN_DESC_1P
    _ "A randomly generated campaign for 1 player. It has 6 levels of difficulty.
(Expert level, 5 scenarios.)" #enddef

#define CC_CAMPAIGN_DESC_2P
    _ "A randomly generated cooperative campaign for 2 players. It has 6 levels of difficulty.
(Expert level, 5 scenarios.)" #enddef

#define CC_CAMPAIGN_DESC_3P
    _ "A randomly generated cooperative campaign for 3 players. It has 6 levels of difficulty.
(Expert level, 5 scenarios.)" #enddef

#define CC_CAMPAIGN_DESC_4P
    _ "A randomly generated cooperative campaign for 4 players. It has 6 level of difficulties.
(Expert level, 5 scenarios.)" #enddef

#define CC_HUMAN_DIFFICULTY IMAGE COLOR
"units/{IMAGE}.png~RC(magenta>{COLOR})"#enddef

#define CC_NIGHTMARE_DIFFICULTY
"units/monsters/fire-dragon.png~CROP(0,0,160,160)~SCALE_INTO(72,72)~RC(magenta>red)"#enddef

#define CC_CAMPAIGN_DIFFICULTY DIFFICULTY IMAGE LABEL DESCRIPTION POWER TRAINED HEROES GOLD TRAIN XP
    {CAMPAIGN_DIFFICULTY {DIFFICULTY} {IMAGE} {LABEL} {DESCRIPTION}}
    [event]
        name=preload
        # These events run for every difficulty, so this Lua block ensures only the active difficulty's
        # event actually fills the settings variable.
        [lua]
            code=<<
                if wesnoth.scenario.difficulty ~= (...).difficulty then
                    wesnoth.wml_actions["return"]{}
                end
            >>
            [args]
                difficulty={DIFFICULTY}
            [/args]
        [/lua]
        [set_variables]
            name=cc_difficulty
            [value]
                name={LABEL}
                enemy_power={POWER}
                enemy_trained={TRAINED}
                heroes={HEROES}
                # adjust bonus gold for number of players
                extra_gold=$(gold * 2 ^ (3 - nplayers) where nplayers = $cc_player_count, gold = {GOLD})
                extra_training={TRAIN}
                experience_penalty={XP}
            [/value]
        [/set_variables]
    [/event]
#enddef

# I know I can add them into the main campaign defines but it gets really messy if done that way so I prefer to keep my code clean

#define ICON_ONE
    "misc/blank-hex.png~BLIT(units/undead-necromancers/adept+female-defend-1.png~RC(magenta>brown)~CROP(10,0,72,72))~BLIT(units/dwarves/berserker/berserker-laugh-1.png~FL()~RC(magenta>white)~CROP(0,0,60,67),15,5)"
#enddef

#define ICON_TWO
    "misc/blank-hex.png~BLIT(units/undead-spirit/spectre-se-attack-6.png~RC(magenta>darkred)~CROP(50,62,150,84),-15,-12)~BLIT(units/goblins/spearman-ne-defend.png~FL()~RC(magenta>darkblue)~CROP(0,0,60,67),20,15)"
#enddef

#define ICON_THREE
    "misc/blank-hex.png~BLIT(units/drakes/armageddon-fire-se-4.png~RC(magenta>darkred)~CROP(10,0,72,72),-10,-10)~BLIT(units/goblins/spearman-ne-defend.png~FL()~RC(magenta>darkblue)~CROP(0,0,60,67),20,10)"
#enddef

#define ICON_FOUR
    "misc/blank-hex.png~BLIT(units/dunefolk/herbalist/alchemist.png~RC(magenta>green),-10,-10)~BLIT(units/saurians/skirmisher/skirmisher-ne-throw9.png~FL(),20,5)"
#enddef

#define IMAGE_ONE
    "data/campaigns/The_Rise_Of_Wesnoth/images/story/trow_story_04-Fall_of_Eldaric.jpg~SCALE_INTO(800,600)"
#enddef

#define CC_CAMPAIGN_NEW PLAYERS ICON
    [campaign]
        id = "CC_{PLAYERS}p"
        define = CAMPAIGN_CC_{PLAYERS}P
        name= {CC_CAMPAIGN_NAME_{PLAYERS}P}
        description = {CC_CAMPAIGN_DESC_{PLAYERS}P}
        first_scenario = "CC_{PLAYERS}p"
        min_players={PLAYERS}
        max_players={PLAYERS}
        icon = {ICON}
        image = {IMAGE_ONE}
        type = mp
        abbrev = _ "WC" + {PLAYERS}\
        {CC_CAMPAIGN_DIFFICULTY VERY_EASY {CC_HUMAN_DIFFICULTY human-peasants/peasant purple} _"Peasant" _"Beginner" 6 2 2 10 yes 0}
        {CC_CAMPAIGN_DIFFICULTY EASY {CC_HUMAN_DIFFICULTY human-loyalists/sergeant black} _"Sergeant" _"Easy" 7 3 2 7 yes 5}
        {CC_CAMPAIGN_DIFFICULTY NORMAL {CC_HUMAN_DIFFICULTY human-loyalists/lieutenant brown} _"Lieutenant" _"Medium" 8 4 2 5 yes 10} {DEFAULT_DIFFICULTY}
        {CC_CAMPAIGN_DIFFICULTY HARD {CC_HUMAN_DIFFICULTY human-loyalists/general orange} _"General" _"Hard" 8 5 2 2 no 13}
        {CC_CAMPAIGN_DIFFICULTY VERY_HARD {CC_HUMAN_DIFFICULTY human-loyalists/marshal white} _"Grand Marshal" _"Challenging" 9 6 2 1 no 17}
        {CC_CAMPAIGN_DIFFICULTY NIGHTMARE {CC_NIGHTMARE_DIFFICULTY} _"Nightmare" _"Expert" 9 7 1 0 no 20}

        [about]
            title = _ "Campaign Design"
            [entry]
                name = "tekelili"
            [/entry]
        [/about]

        [about]
            title = _ "Prose, Grammatical and Text Assistance"
            [entry]
                name = "TL"
            [/entry]
            [entry]
                name = "Natasiel"
            [/entry]
            [entry]
                name = "Rigor"
            [/entry]
            [entry]
                name = "tekelili"
            [/entry]
        [/about]

        [about]
            title = _ "Minor Code Contributors"
            [entry]
                name =  "ezysquire"
            [/entry]
            [entry]
                name =  "tsr"
            [/entry]
        [/about]

        [about]
            title = _ "Playtesting"
            [entry]
                name =  "Bear"
            [/entry]
            [entry]
                name =  "Honor"
            [/entry]
            [entry]
                name =  "jb"
            [/entry]
            [entry]
                name =  "paso"
            [/entry]
            [entry]
                name =  "tekelili"
            [/entry]
        [/about]

        [about]
            title = _ "Campaign Maintenance"
            [entry]
                name = "gfgtdf"
                comment= "former maintainer"
            [/entry]
            [entry]
                name =  "Celtic Minstrel"
                comment= "intermittent maintainer"
            [/entry]
            [entry]
                name =  "Lord-Knightmare"
                comment= "intermittent maintainer"
            [/entry]
        [/about]
    [/campaign]
#enddef

#define CC_SCENARIO_NEW TAG ID NAME PLAYERS
    ## Everything that usually goes into [scenario] like [event], [load_resource], map_data
    ## etc is generated by lua. This is also why there is only one [scenario] tag: the next
    ## scenario is again "WC_II" and the lua code detects that is was called a second
    ## time and generates the second scenario. (Same for third, fourth and fifth). All the lua
    ## code inside ./lua/map does map/scenario generation.
    [{TAG}]
        id = {ID}
        name={NAME}
        allow_new_game=no
        scenario_generation=lua
        experience_modifier=100
        victory_when_enemies_defeated=yes
        carryover_percentage=0
        carryover_report=no
        carryover_add=no
        force_lock_settings=yes
        [generator]
            id={ID}
            config_name={NAME}
            nplayers={PLAYERS}
            create_scenario = <<
                local a = ...
                local function doit()
                    wesnoth.dofile('campaigns/Custom_Conquest/lua/map/main.lua')
                    return cc_ii_generate_scenario(a.nplayers, a)
                end

                local status, res = xpcall(doit, function(e) std_print(e, debug.traceback()) end)
                if status then
                    return res
                else
                    print(res)
                    std_print(res)
                end
            >>
#ifdef EDITOR
            user_config = <<
                local a = ...
                local function doit()
                    wesnoth.dofile('campaigns/Custom_Conquest/lua/map/main.lua');
                    wesnoth.dofile('campaigns/Custom_Conquest/lua/map/settings/settings_dialog.lua');
                    return cc_debug_settings()
                end

                local status, res = xpcall(doit, function(e) std_print(e, debug.traceback()) end)
                if status then
                    return res
                else
                    std_print(res)
                end
            >>
#endif
            nplayers={PLAYERS}
            [scenario]
                {DEFAULT_SCHEDULE}
                {DEFAULT_MUSIC_PLAYLIST}
            [/scenario]
        [/generator]
    [/{TAG}]
#enddef

#{CC_CAMPAIGN_NEW 1 {ICON_ONE}}
#{CC_CAMPAIGN_NEW 2 {ICON_TWO}}
{CC_CAMPAIGN_NEW 3 {ICON_THREE}}
#{CC_CAMPAIGN_NEW 4 {ICON_FOUR}}

#ifdef EDITOR
#ifndef SCHEMA_VALIDATION
{CC_SCENARIO_NEW multiplayer WC_II {CC_CAMPAIGN_NAME_3P} 1}
#endif
#else

#ifdef CAMPAIGN_CC_1P
{CC_SCENARIO_NEW scenario "CC_1p" {CC_CAMPAIGN_NAME_1P} 1}
#endif

#ifdef CAMPAIGN_CC_2P
{CC_SCENARIO_NEW scenario "CC_2p" {CC_CAMPAIGN_NAME_2P} 2}
#endif

#ifdef CAMPAIGN_CC_3P
{CC_SCENARIO_NEW scenario "CC_3p" {CC_CAMPAIGN_NAME_3P} 3}
#endif

#ifdef CAMPAIGN_CC_4P
{CC_SCENARIO_NEW scenario "CC_4p" {CC_CAMPAIGN_NAME_4P} 4}
{CC_SCENARIO_NEW scenario "CC_3p" {CC_CAMPAIGN_NAME_3P} 3}
#endif

#endif
